1.2
DECLARE
var_num1 NUMBER:=5;

BEGIN
	DECLARE
		var_num2 NUMBER:=10;
		BEGIN
		DBMS_OUTPUT.PUT_LINE('Value for var_num1:' ||var_num1);
		END;
	DBMS_OUTPUT.PUT_LINE('Value for var_num1:' ||var_num1);
END;
/
--------------------------------------------------------------------------------------------------

1.3
DECLARE
e_no emp.empno%type;
e_name emp.ename%type;
e_job emp.job%type;
e_mgr emp.mgr%type;
e_hiredate emp.hiredate%type;
e_sal emp.sal%type;
e_com emp.comm%type;
e_dno emp.deptno%type;

BEGIN
SELECT empno,ename,job,mgr,hiredate,sal,comm,deptno INTO
e_no,e_name,e_job,e_mgr,e_hiredate,e_sal,e_com,e_dno from emp where empno=7369;
dbms_output.put_line(e_no || e_name || e_job || e_mgr || e_hiredate || e_sal || e_com || e_no);
END;
/
---------------------------------------------------------------------------------------------------------

1.4
DECLARE
e_no emp.empno%type;
e_name emp.ename%type;
e_job emp.job%type;
e_mgr emp.mgr%type;
e_hiredate emp.hiredate%type;
e_sal emp.sal%type;
e_com emp.comm%type;
e_dno emp.deptno%type;
d_name department_master.dept_name%type;

BEGIN
SELECT e1.empno,e1.ename,e1.job,e1.mgr,e1.hiredate,e1.sal,e1.comm,e1.deptno,d1.dept_name INTO
e_no,e_name,e_job,e_mgr,e_hiredate,e_sal,e_com,e_dno, d_name from emp e1 
join department_master d1 on e1.deptno=d1.dept_code where e1.ename='&e_name';
dbms_output.put_line(e_no || e_name || e_job || e_mgr || e_hiredate || e_sal || e_com || e_dno || d_name);
END;
/
----------------------------------------------------------------------------------------------------------

1.5
DECLARE

CURSOR cur_emp
IS
	SELECT * FROM emp;
	rec_emp cur_emp%rowtype;
BEGIN
	OPEN cur_emp;
	LOOP
		FETCH cur_emp INTO rec_emp;
		IF (rec_emp.sal*0.30>5000) THEN
			DBMS_OUTPUT.PUT_LINE('Before Salary :' || rec_emp.sal);
			UPDATE emp SET sal=sal+5000 WHERE empno=rec_emp.empno;
		ELSE
			DBMS_OUTPUT.PUT_LINE('Before Salary :' || rec_emp.sal);
			UPDATE emp SET sal=sal+0.3*sal WHERE empno=rec_emp.empno;
		END IF;
		EXIT
		WHEN  cur_emp%notfound;
	END LOOP;
CLOSE cur_emp;
END;
/
-----------------------------------------------------------------------------------------------

2.1 & 2.2
DECLARE
V_BONUS STAFF_MASTER.STAFF_SAL%TYPE;
v_SAL STAFF_MASTER.STAFF_SAL%TYPE;

BEGIN
SELECT STAFF_SAL INTO V_SAL FROM STAFF_MASTER WHERE MGR_CODE=501;

V_BONUS:=2*V_SAL;
DBMS_OUTPUT.PUT_LINE('STAFF SALARY IS' || V_SAL);
DBMS_OUTPUT.PUT_LINE('STAFF BONUS IS' || V_BONUS);

EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('GIVEN CODE IS NOT VALID. ENTER VALID CODE');
END;
/
-----------------------------------------------------------------------------------------------

2.3
DECLARE
e_com emp.comm%Type;

BEGIN
SELECT comm into e_com from emp where empno=7369;
DBMS_OUTPUT.PUT_LINE(e_com);

EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('No commision found');
END;
/
-----------------------------------------------------------------------------------------------

3.1
CREATE OR REPLACE FUNCTION vin(input IN date)
RETURN NUMBER IS age NUMBER(10);
BEGIN
SELECT ((sysdate-input)/365) into age FROM dual;
RETURN age;
END;
/

DECLARE
e_input DATE:='&e_input';
var number(10);
BEGIN
var:=vin(e_input);
dbms_output.put_line(var);
END;
/
------------------------------------------------------------------------------------------------
