//LAB 1

1.1
SELECT Staff_Name AS S_Name, Design_code AS D_Code FROM Staff_Master
WHERE (HireDate<'01-JAN-2003') AND (Staff_Sal BETWEEN 12000 AND 25000);

1.2
SELECT Staff_code, Staff_Name, Dept_code FROM Staff_Master
WHERE (MONTHS_BETWEEN(SYSDATE,HireDate))>=216 ORDER BY HireDate;

1.3
SELECT * FROM Staff_Master WHERE Mgr_code IS NULL;

1.4
SELECT * FROM Book_Master WHERE  Book_pub_year BETWEEN 2001 AND 2004
AND Book_Name LIKE'%[&]%';

1.5
SELECT Staff_Name FROM Staff_Master WHERE Staff_Name LIKE '%_%';

--------------------------------------------------------------------------------------------------------------------


//LAB 2


2.1

2.1.1
SELECT Staff_Name,'$'||Staff_Sal AS STAFF_SALARY FROM Staff_Master;

2.1.2
SELECT Student_Name,TO_CHAR(Student_dob,'MONTH DD YYYY') AS STUDENT_DOB FROM Student_Master 
WHERE TO_CHAR(Student_dob,'DAY') LIKE  ('%SATURDAY') OR TO_CHAR(Student_dob,'DAY') LIKE  ('%SUNDAY');

2.1.3
SELECT Staff_Name,ROUND(MONTHS_BETWEEN(SYSDATE,HireDate)) AS MONTHS_WORKED FROM Staff_Master;

2.1.4
SELECT * FROM Staff_Master WHERE TO_CHAR(HireDate,'DD') 
BETWEEN 1 AND 15 AND TO_CHAR(HireDate,'MONTH') LIKE '%DECEMBER%';

2.1.5
SELECT Staff_Name,Staff_Sal 
	CASE 
	WHEN Staff_Sal >=50000 THEN 'A'  
	WHEN Staff_Sal  >=25000 AND  Staff_Sal<50000 THEN 'B' 
	WHEN Staff_Sal  >=10000 AND  Staff_Sal<25000 THEN 'C' 
	ELSE 'D' 
	END CASE
	FROM Staff_Master;

2.1.6
SELECT Staff_Name,TO_CHAR(HireDate,'DD MONTH YYYY') AS HireDate,TO_CHAR(HireDate,'DAY')AS DAY 
FROM Staff_Master ORDER BY TO_CHAR(HireDate,'DAY') DESC;

2.1.7
SELECT INSTR('Mississippi','i',2,3) FROM DUAL;

2.1.8
SELECT TO_CHAR(NEXT_DAY(SYSDATE,'TUESDAY'),'DD MONTH ,YYYY') AS DAY FROM DUAL 
WHERE NEXT_DAY(SYSDATE,'TUESDAY')<LAST_DAY(SYSDATE);

2.1.9
SELECT Student_code,Student_Name,DECODE(DEPT_CODE,20,'ELECTRICALS',30,'ELECTRONICS','OTHERS') Department_Name FROM Student_Master;



2.2

2.2.1
SELECT MAX(STAFF_SAL) AS MAXIMUM,
MIN(STAFF_SAL) AS MINIMUM,
SUM(STAFF_SAL) AS TOTAL,
ROUND(AVG(STAFF_SAL),2) AS AVERAGE
FROM Staff_Master GROUP BY Dept_code;

2.2.2
SELECT Dept_code,COUNT(Mgr_code)AS Total_Number_of_Managers
FROM Staff_Master
GROUP BY Dept_code;

2.2.3
SELECT SUM(Staff_Sal),Dept_code
FROM Staff_Master
WHERE Mgr_code IS NULL
GROUP BY Dept_code
HAVING SUM(Staff_Sal)>20000;


-------------------------------------------------------------------------------------------------------------------------------------

//LAB 3


3.1
SELECT S.Staff_Name,D.Dept_code,D.Dept_Name,S.Staff_Sal
FROM Staff_Master S,Department_Master D
WHERE S.Dept_code=D.Dept_code AND Staff_Sal>20000;

3.2
SELECT S.Staff_code AS Staff#, S.Staff_Name AS Staff, D.Dept_Name, S.Mgr_code AS Mgr#
FROM Staff_Master S,Department_Master D
WHERE S.Dept_code=D.Dept_code;

3.3
SELECT S.Student_code,S.Student_Name,B.Book_code,BB.Book_Name FROM Student_Master S,Book_Transactions B, Book_Master BB
WHERE S.Student_code=B.Student_code AND TO_CHAR(B.Book_Expected_Return_Date,'DD MM YYYY')  LIKE TO_CHAR(SYSDATE,'DD MM YYYY');
 
3.4
SELECT S.Staff_code, S.Staff_Name,D.Dept_Name,F.Design_Name,G.Book_Name,H.Book_Issue_Date 
FROM Staff_Master S,Department_Master D,Designation_Master F,Book_Master F,Book_Issue_Date H
WHERE MONTHS_BETWEEN(TO_CHAR(H.Book_Issue_Date,'MM'),TO_CHAR(SYSDATE,'MM'))<1;

3.6
SELECT Staff_Code, Staff_Name,STAFF_SAL  FROM STAFFMASTER 
WHERE STAFF_SAL<(SELECT AVG(STAFF_SAL) FROM STAFFMASTER);

3.7
SELECT AUTHOR,BOOK_NAME FROM BOOK_MASTER GROUP BY AUTHORNAME HAVING COUNT(AUTHOR)>1;

3.8
SELECT S.Staff_Code,D.Staff_Name,D.DEPT_NAME FROM STAFFMASTER S,BOOK_TRANSACTIONS D GROUP BY S.STAFF_NAME HAVING COUNT(D.STAFF_NAME)>1;

3.9
SELECT S.STUDENT_CODE,S.STUDENT_NAME,D.DEPT_NAME FROM STAFFMASTER S,DEPARTMENT_MASTER D GROUP BY S.DEPT_CODE HAVING MAX(S.DEPT_CODE);

3.10
SELECT S.Staff_Code,S.Staff_Name,D.DEPT_NAME,F.DESIGN_NAME FROM STAFFMASTER S, DEPARTMENT_MASTER D,DESIGNATION_MASTER F 
WHERE MONTHS_BETWEEN(TO_CHAR(HIREDATE,'MM') ,TO_CHAR(SYSDATE,'MM'))<3;

3.13
SELECT DEPT_CODE,DEPT_NAME,COUNT(S.STAFF_NAME) AS NUMBEROFPEOPLE FROM STAFFMASTER S,DEPARTMENT_MASTER D GROUP BY DEPT_CODE;

----------------------------------------------------------------------------------------------------------------------------


//LAB 4

4.1
create table customer
	(
	customerid number(5),
	cust_name varchar2(20),
	Address1 varchar2(30),
	Address2 varchar2(30)
	);

4.2
Alter table customer rename column cust_name to customername;
Alter table customer modify customername  varchar2(30) Not Null;

4.3
a)Alter table customer add Gender varchar2(1);
 Alter table customer add Age Number(3);
 Alter table customer add phoneNo(10);
b)Rename the Customer table to Cust_Table
  Rename customer to cust_table;

4.4
insert into cust_table(&Customerid,'&cust_Name','&Address1','&Address2','&Gender',&Age,&phoneNo);
1000, ‘Allen’, ‘#115 Chicago’, ‘#115 Chicago’, ‘M’, ‘25, 7878776’
1001, George, #116 France, #116 France, M, 25, 434524
1002, Becker, #114 New York, #114 New York, M, 45, 431525

4.5
Alter table cust_table add constraints Custid_prim PRIMARY KEY (customerid);

4.7
Alter table cust_table drop PRIMARY KEY custid_prim;

4.8
Alter table cust_table add constraints Custid_prim PRIMARY KEY (customerid);

4.9
Alter table cust_table drop PRIMARY KEY custid_prim;
Insert into cust_table(1002, Becker, #114 New York, #114 New york , M, 45,431525, 15000.50);
Insert into cust_table(1003, Nanapatekar, #115 India, #115 India , M, 45, 431525,20000.50);

4.10
TRUNCATE table cust_table;

4.11
Alter table add e_mail varchar2(30);

4.12
Alter table cust_table DROP e_mail;

4.13
create table Suppliers as select(customerid as suppid,customername as sname,
adddress1 as addr1,address2 as addr2,phoneno as contactno) from cust_table;

4.14
Drop table Suppliers;
create table customermaster(customerid(10) primary key(custid_pk),customername varchar2(30),
Address1 varchar2(30),Address2 varchar2(30),Gender varchar2(1),Age number(3),phoneno number(10));

4.15
Create table Accoutnmaster(customerid number(5),Accountnumber number(10) primary key(acno),accounttype char(3),ledgerbalance number(10) Not Null);
Create sequence seq_ano
		MINVALUE 101
		MAXVALUE 10000
		START WITH 101
		INCREMENT BY 1
		CACHE 101;

4.16
Alter table Accountmaster ADD constraint ass_fk FOREIGN KEY(customerid) REFERENCES customermaster(customerid);

4.17
Insert into customermaster values(1000, Allen, #115 Chicago, #115 Chicago, M, 25, 7878776);
Insert into customermaster values(1001, George, #116 France, #116 France, M, 25, 4345240;
Insert into customermaster values(1002, Becker, #114 New York, #114 New York, M, 45, 4315250;

4.18
alter table Accountmaster add constraint ck_ac check(accountype='NRI' or accountype='IND');

4.19
alter table Accountmaster add constraint Balance_check(ledger balance > 5000);

4.20
Delete from Accountmaster,customertable where customerid = 1001;

4.21
Create table accountdetails as select * from Accountmaster;

4.22
CREATE VIEW Acc_view AS SELECT(Customerid,Customername,Accountnumber,AccountType,ledgerBalance) from AccountMaster;

4.23
CREATE VIEW vAccs_Dtls AS SELECT Accounttype,ledgerbalance
from Accountmaster where accounttype = 'IND' and ledgerbalance < 10000;

4.25
CREATE sequence SEQ_DEPT minvalue 40 start with 40 increment by 10 MAX VALUE 200 cache 40;

4.26
create table departmentmaster(deptno number(50),Dname varchar2(25),location varchar2(25));
insert into departmentmaster  values(seq_dept.NEXTVAL,'MARKETING','NEW DELHI');
insert into departmentmaster  values(seq_dept.NEXTVAL,'SALES','chennai');
insert into departmentmaster  values(seq_dept.NEXTVAL,'RESEARCH','BOSTON');

4.27
DROP sequence seq_dept;

4.28
CREATE INDEX no_name on emp(empno);
select * from emp;

4.29
create SYNONYM synemp for emp;

4.30
select * from synemp;

4.31
CREATE INDEX IDX_EMP_HIREDATE on emp(HIREDATE);

4.32
CREATE sequence SEQ_EMP minvalue 1001 start with 1001 increment by 1 cache 1001;

--------------------------------------------------------------------------------------------------------------------

//LAB 5

5.1
Create table employee as select * from emp where 1=3;
desc employee;

Name 	    Null 	  Type 
EMPNO 	  NOT NULL 	NUMBER(4) 
ENAME 	  		VARCHAR2(10) 
JOB 	  		VARCHAR2(50) 
MGR 	  		NUMBER(4) 
HIREDATE 	  	DATE 
SAL 	  		NUMBER(7,2) 
COMM 	  		NUMBER(7,2) 
DEPTNO 	  		NUMBER(2) 
 
select * from employee;


5.2
select * from employee;
EMPNO	ENAME	JOB    MGR   HIREDATE 	SAL 	COMM 	DEPTNO
7369	SMITH	  	  	  	800 	  	20
7499	ALLEN	  	  	  	1600 	  	30
7521	WARD	  	  	  	1250 	  	30
7566	JONES	  	  	  	2975 	  	20
7654	MARTIN	  	  	  	1250 	  	30
7698	BLAKE	  	  	  	2850 	  	30
7782	CLARK	  	  	  	2450 	  	10
7788	SCOTT	  	  	  	3000 	  	20
7839	KING	  	  	  	5000 	  	10
7844	TURNER	  	  	  	1500 	  	30
7876	ADAMS	  	  	  	1100 	  	20
7900	JAMES	  	  	  	950 	  	30
7902	FORD	  	  	  	3000 	  	20
7934	MILLER	  	  	  	1300 	  	10
14 rows selected.

5.3
update table employee set job=(select job from employee where empno=7788),deptno=(select deptno from employee 
where empno=7788) where empno=7698;

5.4
delete from employee where departmentname like '%sales%';

5.5
update table employee set deptno=(select deptno from employee where deptno=7788) where deptno=7698;

5.6
insert into emp (empno,'ename','job',mgr,'hiredate',sal,comm,deptno) values (1000,Allen, Clerk,1001,12-jan-01, 3000, 2,10);
insert into emp (empno,'ename','job',mgr,'hiredate',sal,comm,deptno) values (1001,George, analyst, null, 08 Sep 92, 5000,0, 10);
insert into emp (empno,'ename','job',mgr,'hiredate',sal,comm,deptno) values (1002, Becker, Manager, 1000, 4 Nov 92, 2800,4, 20);
insert into emp (empno,'ename','job',mgr,'hiredate',sal,comm,deptno) values (1003, 'Bill', Clerk, 1002, 4 Nov 92,3000, 0, 20);

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//LAB 6

6.1
insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) values (6000, John, #115 Chicago, #115 Chicago, M, 25, 7878776, 10000);
insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) values (6001, Jack, #116 France, #116 France, M, 25, 434524, 20000);
insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) values (6002, James, #114 New York, #114 New York, M, 45, 431525, 15000.50);

6.2
insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) values (6000, John, #115 Chicago, #115 Chicago, M, 25, 7878776, 10000);
insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) values (6001, Jack, #116 France, #116 France, M, 25, 434524, 20000);
insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) values (6002, James, #114 New York, #114 New York, M, 45, 431525, 15000.50);
savepoint p1;

6.3
insert into customermaster (customerid,'customername','address1','address2','gender',age,'phoneno) values (6003, John, #114 Chicago, #114 Chicago, M, 45, 439525, 19000.60);

6.4
rollback p1;